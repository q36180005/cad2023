var tipuesearch = {"pages": [{'title': 'About', 'text': ' https://github.com/mdecycu/cmsite  \n 倉儲 <<<< \n https://q36180005.github.io/cad2023 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Yeah body (Click in\xa0◀︎◀︎◀︎)', 'text': '', 'tags': '', 'url': 'Yeah body (Click in\xa0◀︎◀︎◀︎).html'}, {'title': 'w4', 'text': '1.建立線上考試帳號並將Github建立2023倉儲,弄Github Page搞出靜態網站 \n 2.利用Replit連結Github的網站,將改版後的資料內容generate到Github \n 3.用自選CAD套件(Inventor, Soliwork, Sloid Edge, NX, Creo, Oneshape, Solvespace等等套件)完成零組件 任務一 的設計繪圖 \n 4. (老師我愛你) \n', 'tags': '', 'url': 'w4.html'}, {'title': 'W5', 'text': '1.選擇用soliwork畫出零組件 \n 2.認識CoppeliaSim然後學 \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '1.評分網站及倉儲(Reference-->cadenote 電腦輔助設計與實習課堂筆記) \n Cad2023_2a_學員網站跟倉儲 \n 2.小組評分網站及倉儲--< (Reference-->cadenote 電腦輔助設計與實習課堂筆記) \n 第一組age1 \xa0{ repo } \n \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '1.在w9前畫出3D可列印的零組件模型,包含各個CAD套件以及繪圖完整過程影片 \n 2. \n \xa0 \xa0\\____________/ \xa0 _/_|________|_\\_ \xa0 \xa0/⭕️⭕️____⭕️⭕️\\\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0-----<<<你覺得帥不帥?? \xa0 |___/_Peggy_\\___| \xa0 \\oo|_|_|____|_|_|oo/ \n', 'tags': '', 'url': 'W7.html'}, {'title': 'w8', 'text': '維護網站的方法: \n 1.localhost透過token,SSH確定git push權限,SS設定可以透過Putty完成 \n 2.Replit透過connect功能連結與Github的權限 \n 3.自架主機s1511.cycu.org>>透過SSH以及分配埠號 \n 4. (老師我愛你) \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w9', 'text': '1.Github在2023年底之後要登入時需要2FA認證 \n 2.Replit在2024年初不讓免費仔使用了,只能only fan \n 3.剩下git clone到近端硬碟再回推回去Github \n', 'tags': '', 'url': 'w9.html'}, {'title': 'w14', 'text': 'acp \n', 'tags': '', 'url': 'w14.html'}, {'title': 'W15', 'text': '永動機模擬操作. \n wink影片 (修正一) \n 零件檔案 \n', 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': '倉儲網站與評分項目 (我這樣必須過吧,我不想被Fire, 老師我愛你) \n A: 是否 按照進度明確標示倉儲的改版歷程 (這個我是一定有座的√) \n B: 是否根據 \xa0IPv4 與 IPv6 \xa0 網路環境設定進行作法討論 (這個必須有做√) \n C: 是否就 \xa0 Replit、s.cycu.org 與 localhost \xa0 情境下對個人與分組倉儲進行設定操作 (這個應該算有做√) \n D: 是否就所分配的 \xa0 CAD 套件 從安裝設定到繪圖提供內容參考 (這個有有有√) \n E: 是否使用所分配的 CAD 套件 完成專案一零組件繪圖 , 並提供零組件下載 (這個我也有√) \n F: 是否將自行繪製的專案一零組件 轉入 CoppeliaSim (這個有想要做好但遇到很多問題50%✕50%✓) \n G: 是否 利用\xa0ZMQ Remote API Python \xa0 對專案一轉入的零組件設定感測器, 並進行 鋼球永動模擬 (有詢問大佬教學但還沒有完成找出問題50%✕50%✓) \n H: 是否 實際操作\xa0Triangle 軌道系統的鋼球永動模擬 (我很誠實>這個還沒✕) \n I: 是否完成 W15 的 平面雙 U 迴路上的鋼球永動系統繪圖、轉檔與系統模擬 (這個有畫設計繪圖零件>但並沒有模擬50%✕50%✓) \n J: 是否使用所分配的  CAD 套件完成專案二 1D 平台零組件繪圖 , 並提供零組件下載 (這個應該有畫圖✓?) \n K: 是否 利用\xa0ZMQ Remote API Python\xa0對專案二轉入的零組件設定感測器 , 並進行鋼球永動模擬 (這個好像是下學期的?? 我沒有做✕) \n L: 是否針對 專案二的 1D 平台鋼球平衡系統所需的\xa0PID 控制理論進行資料收集與 ChatGPT 對答 (這個目前沒有✕) \n', 'tags': '', 'url': 'W16.html'}, {'title': 'Replit', 'text': '如何維護網頁? 當在動態網站save剛更新的資料內容後>點擊convert轉換網站>回到replit點擊Git>在update輸入框中輸入更新內容的代名稱>點選stage&commit(會看到更新的內容已被載入)>最後點擊push>成功! \n', 'tags': '', 'url': 'Replit.html'}, {'title': 's1511', 'text': '維護網站的方法: \n 1.localhost透過token,SSH確定git push權限,SS設定可以透過Putty完成 \n 2.Replit透過connect功能連結與Github的權限 \n 3.自架主機s1511.cycu.org>>透過SSH以及分配埠號 \n', 'tags': '', 'url': 's1511.html'}, {'title': 'localhost', 'text': '\n', 'tags': '', 'url': 'localhost.html'}, {'title': 'Exam', 'text': '1.連到機械設計系ipv6網域之後,可以進去到考試網站裡面{ 點我進入 } \n 2.創辦帳號時,username是學號,然後..................自己應該會創吧(Group:二甲>>cad2023a) \n 3. (老師我愛你) \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'project1', 'text': '', 'tags': '', 'url': 'project1.html'}, {'title': '網路設定', 'text': '{前提> 由於電腦輔助設計室某部分套件, 在 IPv4 網路環境下會被防毒軟體偵測到封包異常而封閉網路, 因此以下將 IPv4 網路關閉, 僅使用 IPv6, 並透過雙網路協定支援的代理主機設定, 以便與僅支援 IPv4 的網路主機連線} \n 意思也就是ipv4不要用就對了,那個都幾年前的東西了,ipv6還比較好一點 \n >>>> 利用隨身碟上的批次檔案進行電腦輔助設計室網路環境設定{ 老師的影片 } \n Reference-->mde.tw>cadnote>網路設定 \n', 'tags': '', 'url': '網路設定.html'}, {'title': '任務一(專案一)', 'text': '', 'tags': '', 'url': '任務一(專案一).html'}, {'title': '磁力吸引', 'text': '零件檔案 \n >>>>>>>以下\xa0 Reference:大佬授權使用 \n 如果新增了感測器 > 鋼珠會穿模(也就是會飛出去) \n \n', 'tags': '', 'url': '磁力吸引.html'}, {'title': '專案二', 'text': '', 'tags': '', 'url': '專案二.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};